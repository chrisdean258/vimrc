Commands
	General

		:let {var}={val} - set a variable to a value

		:set {(no)setting} - sets a general setting for vim
		:setlocal {(no)setting} - sets setting only for local buffer

		:command {toMap} {mapping} - maps the command toMap to mapping
		
		:normal - executes command as in normal mode
		:normal! - executes command as in normal mode ignoring any user remapped characters:w
	
		:execute {string} - executes the given string as a command
		:call {function(args)} - calss the function with given args

		:e - edit new file
		:r - read contents of file into buffer
	
	Buffer commands

		:w - write buffer
		:q - quit
		:wq - write and quit
	
	Moving windows

		:wincmd (h|j|k|l) - move between windows in split screens
	
	Regex

		:(range)s/pattern/replace/(ge)
	
	Run Command on lines

		:(range)g/pattern/command - executes command on lines mathcing pattern

	Mapping

		:noremap {lhs} {rhs} - general map lhs to rhs
		:nnoremap {lhs} {rhs} - normal map lhs to rhs
		:inoremap {lhs} {rhs} - insert map lhs to rhs
		:vnoremap {lhs} {rhs} - visual map lhs to rhs
		:onoremap {lhs} {rhs} - operator maps to the end of the line
		:(n|i|v|o)unmap {expr} - unmaps the previously mapped expression

	Abbreviation

		:iabbrev {lhs} {rhs} - expands lhs to rhs in insert mode

	Autocommands

		:augroup (Name) - declares an autocommand group
		:  autocmd!     - clears the group (for when it gets reloaded)
		:  autocmd {expr} {pattern} {command} - runs autocmd when expr and pattern are met
		:augroup END - ends augroup
Navigation

	h | <left>  - move left
	j | <down>  - move down
	k | <up>    - move up
	l | <right> - move right

	nG or :n    - move to line n
	G           - move to the end of the file
	gg          - move to the beginning of the file

	ctrl -F     - move forward full screen
	ctrl -B     - move backward full screen
	
	ctrl -f     - move forward full page
	ctrl -b     - move backward full page

	ctrl -U     - move up half screen
	ctrl -D     - down up half screen

	zz          - center cursor on page

Operator pending mappings (* means can be used for navigation) 

	$           - *End of current line
	^           - *Beginning of current line	
	0           - *Beginning of current line	

	w           - *forward one word
	b           - *backward one word
	W           - *forward one WORD
	B           - *backward one WORD

	f{c}        - *to next occurence of {c}
	t{c}        - *to before next occurence of {c}
	F{c}        - *to previous occurence of {c}
	T{c}        - *to after previous occurence of {c}
	

General mappings
	
	
